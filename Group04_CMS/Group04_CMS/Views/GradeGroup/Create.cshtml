@using MIS.Common
@model MIS.Web.Models.GradeGroupViewModel
@{
    ViewBag.Title = UIString.TitlePageGradeGroup;
}

<section class="content-header">
    <h1>
        <i class="fa fa-list"></i>
        @UIString.TitlePageManageLarge
        <small>@UIString.FieldNameGradeGroupId </small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-dashboard"></i> @UIString.BreadCrumbHome</a></li>
        <li><a href="#">@UIString.FieldNameGradeGroupId</a></li>
        <li class="active">@UIString.BreadCrumbCreate</li>
    </ol>
</section>

<section class="content">
    <div class="row">
        <div class="col-md-12">
            <div class="box box-info">
    <div class="box-header with-border">
        <h3 class="box-title">
            <i class="fa fa-plus-square"></i>
            @UIString.BreadCrumbCreate  @UIString.FieldNameGradeGroupId
        </h3>
    </div>
    <!-- /.box-header -->
    <!-- form start -->
    @using (Html.BeginForm("Create", "GradeGroup", FormMethod.Post, new { role = "form" }))
    {
        @Html.AntiForgeryToken()
        <div class="box-body">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="row">
                <div class="form-group col-md-4 col-sm-12 col-xs-12">
                    @Html.LabelFor(model => model.GradeGroupName, new { @class = "control-label" })
                    @Html.EditorFor(model => model.GradeGroupName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.GradeGroupName, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col-md-4 col-sm-6 col-xs-12">
                    @Html.LabelFor(model => model.ParentId, new { @class = "control-label" })
                    @Html.DropDownListFor(model => model.ParentId, (IEnumerable<SelectListItem>)ViewBag.gradegroupList, "-----" + @UIString.DropListSelect + " " + @UIString.FieldNameParentId + "-----", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ParentId, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col-md-4 col-sm-6 col-xs-12">
                    @Html.LabelFor(model => model.SyllabusId, new { @class = "control-label" })
                    @Html.DropDownListFor(model => model.SyllabusId, (IEnumerable<SelectListItem>)ViewBag.SyllabusList, "-----" + @UIString.DropListSelect + " " + @UIString.ObjectSyllabus + "-----", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SyllabusId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                <div class="form-group col-md-4 col-sm-6 col-xs-12">
                    @Html.LabelFor(model => model.Weight, new { @class = "control-label" })
                    @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col-md-4 col-sm-6 col-xs-12">
                    @Html.LabelFor(model => model.StatusId, htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownListFor(model => model.StatusId, (IEnumerable<SelectListItem>)ViewBag.StatusList, "-----" + @UIString.DropListSelect + " " + @UIString.FieldNameStatusId + "-----", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.StatusId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-12 col-sm-12 col-xs-12">
                    @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
                </div>
            </div>
        <div class="box-footer">
            <a class="btn btn-default btn-view" href="@Url.Action("Index", "GradeGroup")" title="@UIString.ButtonBack">
                <i class="fa fa-chevron-circle-left"></i>
                @UIString.ButtonBack
            </a>
            <button type="submit" class="btn btn-primary btn-view" title="@UIString.ButtonSubmit">
                @UIString.ButtonSubmit
            </button>
        </div>
        </div>
                    <!-- /.box-footer -->
    }
            </div>
        </div>
    </div>
</section>